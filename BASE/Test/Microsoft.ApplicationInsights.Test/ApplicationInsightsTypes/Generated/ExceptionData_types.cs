
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.10.1.0
//   File : ExceptionData_types.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />

#region ReSharper warnings
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace
    {
        // [global::Bond.Attribute("Description", "Schema version")]
        // [global::Bond.Id(10), global::Bond.Required]
        public int ver { get; set; }

        // [global::Bond.Attribute("Description", "Exception chain - list of inner exceptions.")]
        // [global::Bond.Attribute("Description", "Severity level. Mostly used to indicate exception severity level when it is reported by logging library.")]
        // [global::Bond.Id(60), global::Bond.Type(typeof(global::Bond.Tag.nullable<SeverityLevel>))]
        public SeverityLevel? severityLevel { get; set; }

        // [global::Bond.Attribute("Description", "Identifier of where the exception was thrown in code. Used for exceptions grouping. Typically a combination of exception type and a function from the call stack.")]
        // [global::Bond.Attribute("MaxStringLength", "1024")]
        // [global::Bond.Id(80)]
        public string problemId { get; set; }

        // [global::Bond.Attribute("Description", "Collection of custom properties.")]
        // [global::Bond.Attribute("MaxKeyLength", "150")]
        // [global::Bond.Attribute("MaxValueLength", "8192")]
        public IDictionary<string, double> measurements { get; set; }

        protected ExceptionData(string fullName, string name)
        {
            ver = 2;
            exceptions = new List<ExceptionDetails>();
            problemId = "";
            properties = new Dictionary<string, string>();


# This file contains partial code from the original project
# Some functionality may be missing or incomplete
